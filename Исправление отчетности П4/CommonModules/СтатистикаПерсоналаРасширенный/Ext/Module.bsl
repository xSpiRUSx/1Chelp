&Вместо ("ДанныеОтчета_СтатистикаФормаП4_2017Кв1")
Функция ДанныеОтчета_СтатистикаФормаП4_2017Кв1Доработанный(ОписаниеПоказателейОтчета, ПараметрыОтчета)
		
	// +++ Добавил 04.03.20
	УстановитьПривилегированныйРежим(Истина);
	// +++
	
	ДанныеОтчета = Новый ТаблицаЗначений;
	Для Каждого ОписаниеПоказателя Из ОписаниеПоказателейОтчета Цикл
		ДанныеОтчета.Колонки.Добавить(ОписаниеПоказателя.ИмяКолонки, ОписаниеПоказателя.ТипКолонки);
	КонецЦикла;
	
	// Получение зарплатных данных отчета.
	ДеревоЗначений = Новый ДеревоЗначений;
	ПараметрыПолученияЗарплатныхДанных = СкопироватьКоллекцию(ПараметрыОтчета);
	ПараметрыПолученияЗарплатныхДанных.Вставить("ДатаНачалаПериодаВыборки", НачалоГода(ПараметрыОтчета.ДатаКонцаПериодаОтчета));
	ДанныеДляЗаполненияРегламентированнойОтчетностиЗарплата("РегламентированныйОтчетСтатистикаФормаП4", ПараметрыПолученияЗарплатныхДанных, ДеревоЗначений);
	
	СНачалаГода = ПараметрыПолученияЗарплатныхДанных.Свойство("СНачалаГода") И ПараметрыПолученияЗарплатныхДанных.СНачалаГода;
	ВыводитьКвартальныеПоказатели = КонецМесяца(ПараметрыОтчета.ДатаКонцаПериодаОтчета) = КонецКвартала(ПараметрыОтчета.ДатаКонцаПериодаОтчета);
	ДелительСумм = 1;
	
	СтрокаОрганизации = ДеревоЗначений.Строки.Найти(ПараметрыОтчета.Организация, "Организация");
	Если СтрокаОрганизации <> Неопределено Тогда
		Для Каждого СтрокаЗарплаты_ОКВЭД Из СтрокаОрганизации.Строки Цикл
			Если СНачалаГода Тогда
				СтрокаЗарплаты_МесяцНачисления = СтрокаЗарплаты_ОКВЭД;
			Иначе
				СтрокаЗарплаты_МесяцНачисления = СтрокаЗарплаты_ОКВЭД.Строки.Найти(ПараметрыПолученияЗарплатныхДанных.ДатаНачалаПериодаОтчета, "МесяцНачисления", Ложь);
			КонецЕсли;
			
			СтрокаОтчета = ДанныеОтчета.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОтчета, СтрокаЗарплаты_ОКВЭД, "КодОКВЭД2, НаименованиеОКВЭД2");
			
			Если СтрокаЗарплаты_МесяцНачисления <> Неопределено Тогда
				СтрокаОтчета.НачисленоРаботникамСписочногоСостава = Окр(СтрокаЗарплаты_МесяцНачисления.НачисленоРаботникамСписочногоСостава / ДелительСумм, 1);
				СтрокаОтчета.НачисленоВнешнимСовместителям        = Окр(СтрокаЗарплаты_МесяцНачисления.НачисленоВнешнимСовместителям / ДелительСумм, 1);
				СтрокаОтчета.НачисленоРаботникамПоДоговорамГПХ    = Окр(СтрокаЗарплаты_МесяцНачисления.НачисленоРаботникамПоДоговорамГПХ / ДелительСумм, 1);
			КонецЕсли;
			
			Если ВыводитьКвартальныеПоказатели Тогда
				ЗаполнитьЗначенияСвойств(СтрокаОтчета, СтрокаЗарплаты_ОКВЭД, "ОтработаноЧасовСНачалаГодаРаботникамиСписочногоСостава, ОтработаноЧасовСНачалаГодаВнешнимиСовместителями");
				СтрокаОтчета.НачисленияСоциальногоХарактера = Окр(СтрокаЗарплаты_ОКВЭД.НачисленияСоциальногоХарактера / ДелительСумм, 1);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Получение кадровых данных отчета и объединение с зарплатными данными по кодам ОКВЭД.
	ДанныеОтчета.Колонки.Добавить("КадровыеДанныеЗаполнены", Новый ОписаниеТипов("Булево"));
	
	ДеревоЗначений = Новый ДеревоЗначений;
	ПараметрыПолученияКадровыхДанных = СкопироватьКоллекцию(ПараметрыОтчета);
	ДанныеДляЗаполненияРегламентированнойОтчетностиКадры("РегламентированныйОтчетСтатистикаФормаП4", ПараметрыПолученияКадровыхДанных, ДеревоЗначений);
	
	СтрокаОрганизации = ДеревоЗначений.Строки.Найти(ПараметрыОтчета.Организация, "Организация");
	Если СтрокаОрганизации <> Неопределено Тогда
		Для Каждого СтрокаКадров Из СтрокаОрганизации.Строки Цикл
			Найденные = ДанныеОтчета.НайтиСтроки(Новый Структура("КодОКВЭД2, КадровыеДанныеЗаполнены", СтрокаКадров.КодОКВЭД2, Ложь));
			Если Найденные.Количество() > 0 Тогда
				СтрокаОтчета = Найденные[0];
			Иначе
				СтрокаОтчета = ДанныеОтчета.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаОтчета, СтрокаКадров, "КодОКВЭД2, НаименованиеОКВЭД2");
			КонецЕсли;
			СтрокаОтчета.КадровыеДанныеЗаполнены = Истина;
			СтрокаОтчета.СредняяЧисленностьЗаПериодСписочногоСостава    = Окр(СтрокаКадров.СредняяЧисленностьЗаПериодСписочногоСостава);
			СтрокаОтчета.СредняяЧисленностьЗаПериодВнешнихСовместителей = Окр(СтрокаКадров.СредняяЧисленностьЗаПериодВнешнихСовместителей, 1);
			СтрокаОтчета.СредняяЧисленностьЗаПериодДоговорников         = Окр(СтрокаКадров.СредняяЧисленностьЗаПериодДоговорников);
		КонецЦикла;
	КонецЕсли;
	
	ДанныеОтчета.Колонки.Удалить("КадровыеДанныеЗаполнены");
	
	Возврат ДанныеОтчета;
КонецФункции
